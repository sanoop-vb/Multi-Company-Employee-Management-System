{"ast":null,"code":"// axiosConfig.js\nimport axios from 'axios';\n\n// Create an Axios instance with default configuration\nconst apiClient = axios.create({\n  baseURL: 'http://127.0.0.1:8000/',\n  // Replace with your API base URL\n  timeout: 10000,\n  // Request timeout in milliseconds\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token to each request\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('accessToken'); // Retrieve the auth token from storage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Response interceptor to handle responses and errors\napiClient.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // Handle specific status codes\n    if (error.response.status === 401) {\n      // Clear tokens if unauthorized\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      console.log('Unauthorized, redirecting to login...');\n      // Optional: redirect to login page if using a router or trigger an event\n      window.location.href = '/login'; // Adjust this based on your routing setup\n    } else {\n      console.error(`Error: ${error.response.status} - ${error.response.data}`);\n    }\n  } else {\n    console.error('Network or server error', error);\n  }\n  return Promise.reject(error);\n});\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","removeItem","console","log","window","location","href","data"],"sources":["D:/Jezt_project/Multi-company-managemeny-system-Frontend/multicompany_management_system_frontend/src/services/axiosConfig.jsx"],"sourcesContent":["// axiosConfig.js\r\nimport axios from 'axios';\r\n\r\n// Create an Axios instance with default configuration\r\nconst apiClient = axios.create({\r\n  baseURL: 'http://127.0.0.1:8000/', // Replace with your API base URL\r\n  timeout: 10000, // Request timeout in milliseconds\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token to each request\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('accessToken'); // Retrieve the auth token from storage\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Response interceptor to handle responses and errors\r\napiClient.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response) {\r\n      // Handle specific status codes\r\n      if (error.response.status === 401) {\r\n        // Clear tokens if unauthorized\r\n        localStorage.removeItem('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n        console.log('Unauthorized, redirecting to login...');\r\n        // Optional: redirect to login page if using a router or trigger an event\r\n        window.location.href = '/login'; // Adjust this based on your routing setup\r\n      } else {\r\n        console.error(`Error: ${error.response.status} - ${error.response.data}`);\r\n      }\r\n    } else {\r\n      console.error('Network or server error', error);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default apiClient;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,wBAAwB;EAAE;EACnCC,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,SAAS,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;EACnD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAb,SAAS,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAChCS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB;IACA,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACjC;MACAP,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC;MACtCR,YAAY,CAACQ,UAAU,CAAC,cAAc,CAAC;MACvCC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACpD;MACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;IACnC,CAAC,MAAM;MACLJ,OAAO,CAACN,KAAK,CAAC,UAAUA,KAAK,CAACG,QAAQ,CAACC,MAAM,MAAMJ,KAAK,CAACG,QAAQ,CAACQ,IAAI,EAAE,CAAC;IAC3E;EACF,CAAC,MAAM;IACLL,OAAO,CAACN,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACjD;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}