{"ast":null,"code":"var _jsxFileName = \"D:\\\\Jezt_project\\\\Multi-company-managemeny-system-Frontend\\\\multicompany_management_system_frontend\\\\src\\\\components\\\\Salarychart.jsx\",\n  _s = $RefreshSig$();\n// src/components/EmployeeSalaryChart.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport './Salarychart.css';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\n\n// Register necessary components from Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst EmployeeSalaryChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const chartRef = useRef(null); // Reference to the chart instance\n\n  useEffect(() => {\n    fetchEmployeeSalaries();\n\n    // Cleanup function to destroy the chart instance when component unmounts\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy(); // Destroy the existing chart instance\n      }\n    };\n  }, []);\n  const fetchEmployeeSalaries = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/employee/');\n      if (response.data && Array.isArray(response.data)) {\n        const employees = response.data;\n        const names = employees.map(emp => emp.name || 'N/A');\n        const salaries = employees.map(emp => parseFloat(emp.salary) || 0);\n        setChartData({\n          labels: names,\n          datasets: [{\n            label: 'Employee Salaries',\n            data: salaries,\n            backgroundColor: 'rgba(54, 162, 235, 0.6)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1\n          }]\n        });\n      } else {\n        console.error('Unexpected data format:', response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching employee data:', error);\n    }\n  };\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Employee Name'\n        },\n        type: 'category'\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Salary ($)'\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Employee Salary Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), chartData.labels ? /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: chartOptions,\n      ref: chartRef // Attach the ref to the Bar component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeSalaryChart, \"9yfqS4Wur7g4UX4DhlcVvA8I8nY=\");\n_c = EmployeeSalaryChart;\nexport default EmployeeSalaryChart;\nvar _c;\n$RefreshReg$(_c, \"EmployeeSalaryChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","axios","jsxDEV","_jsxDEV","register","EmployeeSalaryChart","_s","chartData","setChartData","chartRef","fetchEmployeeSalaries","current","destroy","response","get","data","Array","isArray","employees","names","map","emp","name","salaries","parseFloat","salary","labels","datasets","label","backgroundColor","borderColor","borderWidth","console","error","chartOptions","responsive","scales","x","title","display","text","type","y","beginAtZero","children","className","fileName","_jsxFileName","lineNumber","columnNumber","options","ref","_c","$RefreshReg$"],"sources":["D:/Jezt_project/Multi-company-managemeny-system-Frontend/multicompany_management_system_frontend/src/components/Salarychart.jsx"],"sourcesContent":["// src/components/EmployeeSalaryChart.js\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport './Salarychart.css'\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\n// Register necessary components from Chart.js\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst EmployeeSalaryChart = () => {\r\n  const [chartData, setChartData] = useState({});\r\n  const chartRef = useRef(null); // Reference to the chart instance\r\n\r\n  useEffect(() => {\r\n    fetchEmployeeSalaries();\r\n\r\n    // Cleanup function to destroy the chart instance when component unmounts\r\n    return () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.destroy(); // Destroy the existing chart instance\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const fetchEmployeeSalaries = async () => {\r\n    try {\r\n      const response = await axios.get('http://127.0.0.1:8000/employee/');\r\n      if (response.data && Array.isArray(response.data)) {\r\n        const employees = response.data;\r\n\r\n        const names = employees.map(emp => emp.name || 'N/A');\r\n        const salaries = employees.map(emp => parseFloat(emp.salary) || 0);\r\n\r\n        setChartData({\r\n          labels: names,\r\n          datasets: [\r\n            {\r\n              label: 'Employee Salaries',\r\n              data: salaries,\r\n              backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n              borderColor: 'rgba(54, 162, 235, 1)',\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        });\r\n      } else {\r\n        console.error('Unexpected data format:', response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching employee data:', error);\r\n    }\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Employee Name',\r\n        },\r\n        type: 'category',\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Salary ($)',\r\n        },\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-center\">Employee Salary Chart</h2>\r\n      {chartData.labels ? (\r\n        <Bar\r\n          data={chartData}\r\n          options={chartOptions}\r\n          ref={chartRef} // Attach the ref to the Bar component\r\n        />\r\n      ) : (\r\n        <p>Loading chart data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeSalaryChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}